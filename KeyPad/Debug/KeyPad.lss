
KeyPad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005e8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  000005e8  0000065c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000066c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000069c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  000006d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000012a9  00000000  00000000  000007b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000087c  00000000  00000000  00001a61  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008c3  00000000  00000000  000022dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a4  00000000  00000000  00002ba0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000044b  00000000  00000000  00002d44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000950  00000000  00000000  0000318f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00003adf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ee       	ldi	r30, 0xE8	; 232
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 e7 02 	call	0x5ce	; 0x5ce <main>
  7a:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_SetPinDir>:
			break;
		}
		
		return val;
		
}
  82:	44 23       	and	r20, r20
  84:	b9 f1       	breq	.+110    	; 0xf4 <DIO_SetPinDir+0x72>
  86:	41 30       	cpi	r20, 0x01	; 1
  88:	09 f0       	breq	.+2      	; 0x8c <DIO_SetPinDir+0xa>
  8a:	6b c0       	rjmp	.+214    	; 0x162 <DIO_SetPinDir+0xe0>
  8c:	81 30       	cpi	r24, 0x01	; 1
  8e:	89 f0       	breq	.+34     	; 0xb2 <DIO_SetPinDir+0x30>
  90:	28 f0       	brcs	.+10     	; 0x9c <DIO_SetPinDir+0x1a>
  92:	82 30       	cpi	r24, 0x02	; 2
  94:	c9 f0       	breq	.+50     	; 0xc8 <DIO_SetPinDir+0x46>
  96:	83 30       	cpi	r24, 0x03	; 3
  98:	11 f1       	breq	.+68     	; 0xde <DIO_SetPinDir+0x5c>
  9a:	08 95       	ret
  9c:	2a b3       	in	r18, 0x1a	; 26
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_SetPinDir+0x26>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_SetPinDir+0x22>
  ac:	82 2b       	or	r24, r18
  ae:	8a bb       	out	0x1a, r24	; 26
  b0:	08 95       	ret
  b2:	27 b3       	in	r18, 0x17	; 23
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_SetPinDir+0x3c>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_SetPinDir+0x38>
  c2:	82 2b       	or	r24, r18
  c4:	87 bb       	out	0x17, r24	; 23
  c6:	08 95       	ret
  c8:	24 b3       	in	r18, 0x14	; 20
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_SetPinDir+0x52>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_SetPinDir+0x4e>
  d8:	82 2b       	or	r24, r18
  da:	84 bb       	out	0x14, r24	; 20
  dc:	08 95       	ret
  de:	21 b3       	in	r18, 0x11	; 17
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_SetPinDir+0x68>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_SetPinDir+0x64>
  ee:	82 2b       	or	r24, r18
  f0:	81 bb       	out	0x11, r24	; 17
  f2:	08 95       	ret
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	91 f0       	breq	.+36     	; 0x11c <DIO_SetPinDir+0x9a>
  f8:	28 f0       	brcs	.+10     	; 0x104 <DIO_SetPinDir+0x82>
  fa:	82 30       	cpi	r24, 0x02	; 2
  fc:	d9 f0       	breq	.+54     	; 0x134 <DIO_SetPinDir+0xb2>
  fe:	83 30       	cpi	r24, 0x03	; 3
 100:	29 f1       	breq	.+74     	; 0x14c <DIO_SetPinDir+0xca>
 102:	08 95       	ret
 104:	2a b3       	in	r18, 0x1a	; 26
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_SetPinDir+0x8e>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_SetPinDir+0x8a>
 114:	80 95       	com	r24
 116:	82 23       	and	r24, r18
 118:	8a bb       	out	0x1a, r24	; 26
 11a:	08 95       	ret
 11c:	27 b3       	in	r18, 0x17	; 23
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_SetPinDir+0xa6>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_SetPinDir+0xa2>
 12c:	80 95       	com	r24
 12e:	82 23       	and	r24, r18
 130:	87 bb       	out	0x17, r24	; 23
 132:	08 95       	ret
 134:	24 b3       	in	r18, 0x14	; 20
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_SetPinDir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_SetPinDir+0xba>
 144:	80 95       	com	r24
 146:	82 23       	and	r24, r18
 148:	84 bb       	out	0x14, r24	; 20
 14a:	08 95       	ret
 14c:	21 b3       	in	r18, 0x11	; 17
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <DIO_SetPinDir+0xd6>
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	6a 95       	dec	r22
 15a:	e2 f7       	brpl	.-8      	; 0x154 <DIO_SetPinDir+0xd2>
 15c:	80 95       	com	r24
 15e:	82 23       	and	r24, r18
 160:	81 bb       	out	0x11, r24	; 17
 162:	08 95       	ret

00000164 <DIO_SetPinVal>:
 164:	44 23       	and	r20, r20
 166:	b9 f1       	breq	.+110    	; 0x1d6 <DIO_SetPinVal+0x72>
 168:	41 30       	cpi	r20, 0x01	; 1
 16a:	09 f0       	breq	.+2      	; 0x16e <DIO_SetPinVal+0xa>
 16c:	6b c0       	rjmp	.+214    	; 0x244 <DIO_SetPinVal+0xe0>
 16e:	81 30       	cpi	r24, 0x01	; 1
 170:	89 f0       	breq	.+34     	; 0x194 <DIO_SetPinVal+0x30>
 172:	28 f0       	brcs	.+10     	; 0x17e <DIO_SetPinVal+0x1a>
 174:	82 30       	cpi	r24, 0x02	; 2
 176:	c9 f0       	breq	.+50     	; 0x1aa <DIO_SetPinVal+0x46>
 178:	83 30       	cpi	r24, 0x03	; 3
 17a:	11 f1       	breq	.+68     	; 0x1c0 <DIO_SetPinVal+0x5c>
 17c:	08 95       	ret
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_SetPinVal+0x26>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_SetPinVal+0x22>
 18e:	82 2b       	or	r24, r18
 190:	8b bb       	out	0x1b, r24	; 27
 192:	08 95       	ret
 194:	28 b3       	in	r18, 0x18	; 24
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_SetPinVal+0x3c>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_SetPinVal+0x38>
 1a4:	82 2b       	or	r24, r18
 1a6:	88 bb       	out	0x18, r24	; 24
 1a8:	08 95       	ret
 1aa:	25 b3       	in	r18, 0x15	; 21
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_SetPinVal+0x52>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_SetPinVal+0x4e>
 1ba:	82 2b       	or	r24, r18
 1bc:	85 bb       	out	0x15, r24	; 21
 1be:	08 95       	ret
 1c0:	22 b3       	in	r18, 0x12	; 18
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_SetPinVal+0x68>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_SetPinVal+0x64>
 1d0:	82 2b       	or	r24, r18
 1d2:	82 bb       	out	0x12, r24	; 18
 1d4:	08 95       	ret
 1d6:	81 30       	cpi	r24, 0x01	; 1
 1d8:	91 f0       	breq	.+36     	; 0x1fe <DIO_SetPinVal+0x9a>
 1da:	28 f0       	brcs	.+10     	; 0x1e6 <DIO_SetPinVal+0x82>
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	d9 f0       	breq	.+54     	; 0x216 <DIO_SetPinVal+0xb2>
 1e0:	83 30       	cpi	r24, 0x03	; 3
 1e2:	29 f1       	breq	.+74     	; 0x22e <DIO_SetPinVal+0xca>
 1e4:	08 95       	ret
 1e6:	2b b3       	in	r18, 0x1b	; 27
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <DIO_SetPinVal+0x8e>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <DIO_SetPinVal+0x8a>
 1f6:	80 95       	com	r24
 1f8:	82 23       	and	r24, r18
 1fa:	8b bb       	out	0x1b, r24	; 27
 1fc:	08 95       	ret
 1fe:	28 b3       	in	r18, 0x18	; 24
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_SetPinVal+0xa6>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_SetPinVal+0xa2>
 20e:	80 95       	com	r24
 210:	82 23       	and	r24, r18
 212:	88 bb       	out	0x18, r24	; 24
 214:	08 95       	ret
 216:	25 b3       	in	r18, 0x15	; 21
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_SetPinVal+0xbe>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_SetPinVal+0xba>
 226:	80 95       	com	r24
 228:	82 23       	and	r24, r18
 22a:	85 bb       	out	0x15, r24	; 21
 22c:	08 95       	ret
 22e:	22 b3       	in	r18, 0x12	; 18
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_SetPinVal+0xd6>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_SetPinVal+0xd2>
 23e:	80 95       	com	r24
 240:	82 23       	and	r24, r18
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret

00000246 <DIO_GetPinVal>:

uint8 DIO_GetPinVal(uint8 Port ,uint8 Pin)
{
	uint8 val = 0;
	
	switch(Port)
 246:	81 30       	cpi	r24, 0x01	; 1
 248:	79 f0       	breq	.+30     	; 0x268 <DIO_GetPinVal+0x22>
 24a:	28 f0       	brcs	.+10     	; 0x256 <DIO_GetPinVal+0x10>
 24c:	82 30       	cpi	r24, 0x02	; 2
 24e:	a9 f0       	breq	.+42     	; 0x27a <DIO_GetPinVal+0x34>
 250:	83 30       	cpi	r24, 0x03	; 3
 252:	e1 f0       	breq	.+56     	; 0x28c <DIO_GetPinVal+0x46>
 254:	24 c0       	rjmp	.+72     	; 0x29e <DIO_GetPinVal+0x58>
	{
		case DIO_PORTA :
		val = GET_BIT(PINA,Pin);
 256:	89 b3       	in	r24, 0x19	; 25
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_GetPinVal+0x1a>
 25c:	95 95       	asr	r25
 25e:	87 95       	ror	r24
 260:	6a 95       	dec	r22
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_GetPinVal+0x16>
 264:	81 70       	andi	r24, 0x01	; 1
		break;
 266:	08 95       	ret
		
	    case DIO_PORTB :
		val = GET_BIT(PINB,Pin);	
 268:	86 b3       	in	r24, 0x16	; 22
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <DIO_GetPinVal+0x2c>
 26e:	95 95       	asr	r25
 270:	87 95       	ror	r24
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <DIO_GetPinVal+0x28>
 276:	81 70       	andi	r24, 0x01	; 1
		break;
 278:	08 95       	ret
		
	    case DIO_PORTC :
		val = GET_BIT(PINC,Pin);	    
 27a:	83 b3       	in	r24, 0x13	; 19
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_GetPinVal+0x3e>
 280:	95 95       	asr	r25
 282:	87 95       	ror	r24
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_GetPinVal+0x3a>
 288:	81 70       	andi	r24, 0x01	; 1
	    break;
 28a:	08 95       	ret
		
		case DIO_PORTD :
		val = GET_BIT(PIND,Pin);
 28c:	80 b3       	in	r24, 0x10	; 16
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	02 c0       	rjmp	.+4      	; 0x296 <DIO_GetPinVal+0x50>
 292:	95 95       	asr	r25
 294:	87 95       	ror	r24
 296:	6a 95       	dec	r22
 298:	e2 f7       	brpl	.-8      	; 0x292 <DIO_GetPinVal+0x4c>
 29a:	81 70       	andi	r24, 0x01	; 1
		break;
 29c:	08 95       	ret
		
}

uint8 DIO_GetPinVal(uint8 Port ,uint8 Pin)
{
	uint8 val = 0;
 29e:	80 e0       	ldi	r24, 0x00	; 0
		default:
		break;
	}
	
	return val;
}
 2a0:	08 95       	ret

000002a2 <DIO_SetPullUp>:


void DIO_SetPullUp(uint8 port , uint8 pin)
{
	
	switch(port)
 2a2:	81 30       	cpi	r24, 0x01	; 1
 2a4:	89 f0       	breq	.+34     	; 0x2c8 <DIO_SetPullUp+0x26>
 2a6:	28 f0       	brcs	.+10     	; 0x2b2 <DIO_SetPullUp+0x10>
 2a8:	82 30       	cpi	r24, 0x02	; 2
 2aa:	c9 f0       	breq	.+50     	; 0x2de <DIO_SetPullUp+0x3c>
 2ac:	83 30       	cpi	r24, 0x03	; 3
 2ae:	11 f1       	breq	.+68     	; 0x2f4 <DIO_SetPullUp+0x52>
 2b0:	08 95       	ret
	{
		case DIO_PORTA :
		SET_BIT(PORTA,pin);
 2b2:	2b b3       	in	r18, 0x1b	; 27
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <DIO_SetPullUp+0x1c>
 2ba:	88 0f       	add	r24, r24
 2bc:	99 1f       	adc	r25, r25
 2be:	6a 95       	dec	r22
 2c0:	e2 f7       	brpl	.-8      	; 0x2ba <DIO_SetPullUp+0x18>
 2c2:	82 2b       	or	r24, r18
 2c4:	8b bb       	out	0x1b, r24	; 27
		break;
 2c6:	08 95       	ret
		
		case DIO_PORTB :
		SET_BIT(PORTB,pin);
 2c8:	28 b3       	in	r18, 0x18	; 24
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <DIO_SetPullUp+0x32>
 2d0:	88 0f       	add	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	6a 95       	dec	r22
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <DIO_SetPullUp+0x2e>
 2d8:	82 2b       	or	r24, r18
 2da:	88 bb       	out	0x18, r24	; 24
		break;
 2dc:	08 95       	ret
		
		case DIO_PORTC :
		SET_BIT(PORTC,pin);
 2de:	25 b3       	in	r18, 0x15	; 21
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <DIO_SetPullUp+0x48>
 2e6:	88 0f       	add	r24, r24
 2e8:	99 1f       	adc	r25, r25
 2ea:	6a 95       	dec	r22
 2ec:	e2 f7       	brpl	.-8      	; 0x2e6 <DIO_SetPullUp+0x44>
 2ee:	82 2b       	or	r24, r18
 2f0:	85 bb       	out	0x15, r24	; 21
		break;
 2f2:	08 95       	ret
		
		case DIO_PORTD :
		SET_BIT(PORTD,pin);
 2f4:	22 b3       	in	r18, 0x12	; 18
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <DIO_SetPullUp+0x5e>
 2fc:	88 0f       	add	r24, r24
 2fe:	99 1f       	adc	r25, r25
 300:	6a 95       	dec	r22
 302:	e2 f7       	brpl	.-8      	; 0x2fc <DIO_SetPullUp+0x5a>
 304:	82 2b       	or	r24, r18
 306:	82 bb       	out	0x12, r24	; 18
 308:	08 95       	ret

0000030a <KeyPad_Init>:
							   {'*','0','#','D'} };   
								   
							   
void KeyPad_Init(void)
{
	DIO_SetPinDir( KEYPAD_PORT , KEYPAD_COLOUM0 , DIO_PIN_OUTPUT);
 30a:	41 e0       	ldi	r20, 0x01	; 1
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	83 e0       	ldi	r24, 0x03	; 3
 310:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir( KEYPAD_PORT , KEYPAD_COLOUM1 , DIO_PIN_OUTPUT);
 314:	41 e0       	ldi	r20, 0x01	; 1
 316:	61 e0       	ldi	r22, 0x01	; 1
 318:	83 e0       	ldi	r24, 0x03	; 3
 31a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir( KEYPAD_PORT , KEYPAD_COLOUM2 , DIO_PIN_OUTPUT);
 31e:	41 e0       	ldi	r20, 0x01	; 1
 320:	62 e0       	ldi	r22, 0x02	; 2
 322:	83 e0       	ldi	r24, 0x03	; 3
 324:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir( KEYPAD_PORT , KEYPAD_COLOUM3 , DIO_PIN_OUTPUT);
 328:	41 e0       	ldi	r20, 0x01	; 1
 32a:	63 e0       	ldi	r22, 0x03	; 3
 32c:	83 e0       	ldi	r24, 0x03	; 3
 32e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	
	DIO_SetPinDir( KEYPAD_PORT , KEYPAD_ROW0 , DIO_PIN_INPUT);
 332:	40 e0       	ldi	r20, 0x00	; 0
 334:	64 e0       	ldi	r22, 0x04	; 4
 336:	83 e0       	ldi	r24, 0x03	; 3
 338:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir( KEYPAD_PORT , KEYPAD_ROW1 , DIO_PIN_INPUT);
 33c:	40 e0       	ldi	r20, 0x00	; 0
 33e:	65 e0       	ldi	r22, 0x05	; 5
 340:	83 e0       	ldi	r24, 0x03	; 3
 342:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir( KEYPAD_PORT , KEYPAD_ROW2 , DIO_PIN_INPUT);
 346:	40 e0       	ldi	r20, 0x00	; 0
 348:	66 e0       	ldi	r22, 0x06	; 6
 34a:	83 e0       	ldi	r24, 0x03	; 3
 34c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir( KEYPAD_PORT , KEYPAD_ROW3 , DIO_PIN_INPUT);
 350:	40 e0       	ldi	r20, 0x00	; 0
 352:	67 e0       	ldi	r22, 0x07	; 7
 354:	83 e0       	ldi	r24, 0x03	; 3
 356:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	
	DIO_SetPullUp(KEYPAD_PORT , KEYPAD_ROW0);
 35a:	64 e0       	ldi	r22, 0x04	; 4
 35c:	83 e0       	ldi	r24, 0x03	; 3
 35e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_SetPullUp>
	DIO_SetPullUp(KEYPAD_PORT , KEYPAD_ROW1);
 362:	65 e0       	ldi	r22, 0x05	; 5
 364:	83 e0       	ldi	r24, 0x03	; 3
 366:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_SetPullUp>
	DIO_SetPullUp(KEYPAD_PORT , KEYPAD_ROW2);
 36a:	66 e0       	ldi	r22, 0x06	; 6
 36c:	83 e0       	ldi	r24, 0x03	; 3
 36e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_SetPullUp>
	DIO_SetPullUp(KEYPAD_PORT , KEYPAD_ROW3);
 372:	67 e0       	ldi	r22, 0x07	; 7
 374:	83 e0       	ldi	r24, 0x03	; 3
 376:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_SetPullUp>
	
	DIO_SetPinVal(KEYPAD_PORT , KEYPAD_COLOUM0 , DIO_PIN_HIGH);
 37a:	41 e0       	ldi	r20, 0x01	; 1
 37c:	60 e0       	ldi	r22, 0x00	; 0
 37e:	83 e0       	ldi	r24, 0x03	; 3
 380:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	DIO_SetPinVal(KEYPAD_PORT , KEYPAD_COLOUM1 , DIO_PIN_HIGH);
 384:	41 e0       	ldi	r20, 0x01	; 1
 386:	61 e0       	ldi	r22, 0x01	; 1
 388:	83 e0       	ldi	r24, 0x03	; 3
 38a:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	DIO_SetPinVal(KEYPAD_PORT , KEYPAD_COLOUM2 , DIO_PIN_HIGH);
 38e:	41 e0       	ldi	r20, 0x01	; 1
 390:	62 e0       	ldi	r22, 0x02	; 2
 392:	83 e0       	ldi	r24, 0x03	; 3
 394:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	DIO_SetPinVal(KEYPAD_PORT , KEYPAD_COLOUM3 , DIO_PIN_HIGH);
 398:	41 e0       	ldi	r20, 0x01	; 1
 39a:	63 e0       	ldi	r22, 0x03	; 3
 39c:	83 e0       	ldi	r24, 0x03	; 3
 39e:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 3a2:	08 95       	ret

000003a4 <KeyPad_GetValue>:
	
}

uint8 KeyPad_GetValue(void)
{
 3a4:	df 92       	push	r13
 3a6:	ef 92       	push	r14
 3a8:	ff 92       	push	r15
 3aa:	0f 93       	push	r16
 3ac:	1f 93       	push	r17
 3ae:	cf 93       	push	r28
 3b0:	df 93       	push	r29
 3b2:	0f 2e       	mov	r0, r31
 3b4:	f0 e6       	ldi	r31, 0x60	; 96
 3b6:	ef 2e       	mov	r14, r31
 3b8:	f0 e0       	ldi	r31, 0x00	; 0
 3ba:	ff 2e       	mov	r15, r31
 3bc:	f0 2d       	mov	r31, r0
	uint8 Col_Loc = 0;
	uint8 Row_Loc = 0;
	
	uint8 Value = 0;
 3be:	d1 2c       	mov	r13, r1
	uint8 Temp = 0;
	
	for(Col_Loc = COL_INIT ; Col_Loc <= COL_FINAL ; Col_Loc++)
 3c0:	d0 e0       	ldi	r29, 0x00	; 0
	{
		DIO_SetPinVal(KEYPAD_PORT , Col_Loc , DIO_PIN_LOW);
 3c2:	40 e0       	ldi	r20, 0x00	; 0
 3c4:	6d 2f       	mov	r22, r29
 3c6:	83 e0       	ldi	r24, 0x03	; 3
 3c8:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 3cc:	87 01       	movw	r16, r14
		
		for(Row_Loc = ROW_INIT ; Row_Loc <= ROW_FINAL ; Row_Loc++)
 3ce:	c4 e0       	ldi	r28, 0x04	; 4
		{
			
		 	 Temp =  DIO_GetPinVal(KEYPAD_PORT , Row_Loc);
 3d0:	6c 2f       	mov	r22, r28
 3d2:	83 e0       	ldi	r24, 0x03	; 3
 3d4:	0e 94 23 01 	call	0x246	; 0x246 <DIO_GetPinVal>
			 
			 if(Temp == 0)
 3d8:	81 11       	cpse	r24, r1
 3da:	0e c0       	rjmp	.+28     	; 0x3f8 <KeyPad_GetValue+0x54>
			 {
				Value = KeyPad_Values[Col_Loc - COL_INIT][Row_Loc - ROW_INIT]; 
 3dc:	f8 01       	movw	r30, r16
 3de:	d0 80       	ld	r13, Z
				
				while(Temp == 0)
				{
				   Temp =  DIO_GetPinVal(KEYPAD_PORT , Row_Loc);
 3e0:	6c 2f       	mov	r22, r28
 3e2:	83 e0       	ldi	r24, 0x03	; 3
 3e4:	0e 94 23 01 	call	0x246	; 0x246 <DIO_GetPinVal>
			 
			 if(Temp == 0)
			 {
				Value = KeyPad_Values[Col_Loc - COL_INIT][Row_Loc - ROW_INIT]; 
				
				while(Temp == 0)
 3e8:	88 23       	and	r24, r24
 3ea:	d1 f3       	breq	.-12     	; 0x3e0 <KeyPad_GetValue+0x3c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3ec:	8f e3       	ldi	r24, 0x3F	; 63
 3ee:	9c e9       	ldi	r25, 0x9C	; 156
 3f0:	01 97       	sbiw	r24, 0x01	; 1
 3f2:	f1 f7       	brne	.-4      	; 0x3f0 <KeyPad_GetValue+0x4c>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <KeyPad_GetValue+0x52>
 3f6:	00 00       	nop
	
	for(Col_Loc = COL_INIT ; Col_Loc <= COL_FINAL ; Col_Loc++)
	{
		DIO_SetPinVal(KEYPAD_PORT , Col_Loc , DIO_PIN_LOW);
		
		for(Row_Loc = ROW_INIT ; Row_Loc <= ROW_FINAL ; Row_Loc++)
 3f8:	cf 5f       	subi	r28, 0xFF	; 255
 3fa:	0f 5f       	subi	r16, 0xFF	; 255
 3fc:	1f 4f       	sbci	r17, 0xFF	; 255
 3fe:	c8 30       	cpi	r28, 0x08	; 8
 400:	39 f7       	brne	.-50     	; 0x3d0 <KeyPad_GetValue+0x2c>
				_delay_ms(10);
			 }
			  
		}
		
		DIO_SetPinVal(KEYPAD_PORT , Col_Loc , DIO_PIN_HIGH);
 402:	41 e0       	ldi	r20, 0x01	; 1
 404:	6d 2f       	mov	r22, r29
 406:	83 e0       	ldi	r24, 0x03	; 3
 408:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	uint8 Row_Loc = 0;
	
	uint8 Value = 0;
	uint8 Temp = 0;
	
	for(Col_Loc = COL_INIT ; Col_Loc <= COL_FINAL ; Col_Loc++)
 40c:	df 5f       	subi	r29, 0xFF	; 255
 40e:	94 e0       	ldi	r25, 0x04	; 4
 410:	e9 0e       	add	r14, r25
 412:	f1 1c       	adc	r15, r1
 414:	d4 30       	cpi	r29, 0x04	; 4
 416:	a9 f6       	brne	.-86     	; 0x3c2 <KeyPad_GetValue+0x1e>
		DIO_SetPinVal(KEYPAD_PORT , Col_Loc , DIO_PIN_HIGH);
		
	}
	
	return Value ;
}
 418:	8d 2d       	mov	r24, r13
 41a:	df 91       	pop	r29
 41c:	cf 91       	pop	r28
 41e:	1f 91       	pop	r17
 420:	0f 91       	pop	r16
 422:	ff 90       	pop	r15
 424:	ef 90       	pop	r14
 426:	df 90       	pop	r13
 428:	08 95       	ret

0000042a <LCD_WriteCommand>:
	
	#endif
}

void LCD_WriteCommand(uint8 cmd)
{
 42a:	cf 93       	push	r28
 42c:	c8 2f       	mov	r28, r24
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_RS_PIN ,DIO_PIN_LOW);
 42e:	40 e0       	ldi	r20, 0x00	; 0
 430:	61 e0       	ldi	r22, 0x01	; 1
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_RW_PIN ,DIO_PIN_LOW);
 438:	40 e0       	ldi	r20, 0x00	; 0
 43a:	62 e0       	ldi	r22, 0x02	; 2
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_E_PIN ,DIO_PIN_LOW);
 442:	40 e0       	ldi	r20, 0x00	; 0
 444:	63 e0       	ldi	r22, 0x03	; 3
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	
	PORTA = (cmd & 0xF0) | (PORTA & 0X0F);
 44c:	8b b3       	in	r24, 0x1b	; 27
 44e:	9c 2f       	mov	r25, r28
 450:	90 7f       	andi	r25, 0xF0	; 240
 452:	8f 70       	andi	r24, 0x0F	; 15
 454:	89 2b       	or	r24, r25
 456:	8b bb       	out	0x1b, r24	; 27
	
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_E_PIN ,DIO_PIN_HIGH);
 458:	41 e0       	ldi	r20, 0x01	; 1
 45a:	63 e0       	ldi	r22, 0x03	; 3
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 462:	8f e9       	ldi	r24, 0x9F	; 159
 464:	9f e0       	ldi	r25, 0x0F	; 15
 466:	01 97       	sbiw	r24, 0x01	; 1
 468:	f1 f7       	brne	.-4      	; 0x466 <LCD_WriteCommand+0x3c>
 46a:	00 c0       	rjmp	.+0      	; 0x46c <LCD_WriteCommand+0x42>
 46c:	00 00       	nop
	_delay_ms(1);
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_E_PIN ,DIO_PIN_LOW);
 46e:	40 e0       	ldi	r20, 0x00	; 0
 470:	63 e0       	ldi	r22, 0x03	; 3
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	
	PORTA = (cmd << 4) | (PORTA & 0X0F);
 478:	2b b3       	in	r18, 0x1b	; 27
 47a:	30 e1       	ldi	r19, 0x10	; 16
 47c:	c3 9f       	mul	r28, r19
 47e:	c0 01       	movw	r24, r0
 480:	11 24       	eor	r1, r1
 482:	92 2f       	mov	r25, r18
 484:	9f 70       	andi	r25, 0x0F	; 15
 486:	89 2b       	or	r24, r25
 488:	8b bb       	out	0x1b, r24	; 27
	
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_E_PIN ,DIO_PIN_HIGH);
 48a:	41 e0       	ldi	r20, 0x01	; 1
 48c:	63 e0       	ldi	r22, 0x03	; 3
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 494:	8f e9       	ldi	r24, 0x9F	; 159
 496:	9f e0       	ldi	r25, 0x0F	; 15
 498:	01 97       	sbiw	r24, 0x01	; 1
 49a:	f1 f7       	brne	.-4      	; 0x498 <LCD_WriteCommand+0x6e>
 49c:	00 c0       	rjmp	.+0      	; 0x49e <LCD_WriteCommand+0x74>
 49e:	00 00       	nop
	_delay_ms(1);
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_E_PIN ,DIO_PIN_LOW);
 4a0:	40 e0       	ldi	r20, 0x00	; 0
 4a2:	63 e0       	ldi	r22, 0x03	; 3
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 4aa:	8f e1       	ldi	r24, 0x1F	; 31
 4ac:	9e e4       	ldi	r25, 0x4E	; 78
 4ae:	01 97       	sbiw	r24, 0x01	; 1
 4b0:	f1 f7       	brne	.-4      	; 0x4ae <LCD_WriteCommand+0x84>
 4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <LCD_WriteCommand+0x8a>
 4b4:	00 00       	nop
	
	_delay_ms(5);
}
 4b6:	cf 91       	pop	r28
 4b8:	08 95       	ret

000004ba <LCD_Init>:
	_delay_ms(20);
	
	
	#elif   LCD_MODE ==  4
	
	  DIO_SetPinDir(LCD_4BIT_CMD_PORT ,LCD_RS_PIN ,DIO_PIN_OUTPUT);
 4ba:	41 e0       	ldi	r20, 0x01	; 1
 4bc:	61 e0       	ldi	r22, 0x01	; 1
 4be:	81 e0       	ldi	r24, 0x01	; 1
 4c0:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	  DIO_SetPinDir(LCD_4BIT_CMD_PORT ,LCD_RW_PIN ,DIO_PIN_OUTPUT);
 4c4:	41 e0       	ldi	r20, 0x01	; 1
 4c6:	62 e0       	ldi	r22, 0x02	; 2
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	  DIO_SetPinDir(LCD_4BIT_CMD_PORT ,LCD_E_PIN ,DIO_PIN_OUTPUT);
 4ce:	41 e0       	ldi	r20, 0x01	; 1
 4d0:	63 e0       	ldi	r22, 0x03	; 3
 4d2:	81 e0       	ldi	r24, 0x01	; 1
 4d4:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	  
	  DIO_SetPinDir(LCD_4BIT_DATA_PORT ,LCD_D4 ,DIO_PIN_OUTPUT);  
 4d8:	41 e0       	ldi	r20, 0x01	; 1
 4da:	64 e0       	ldi	r22, 0x04	; 4
 4dc:	80 e0       	ldi	r24, 0x00	; 0
 4de:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
      DIO_SetPinDir(LCD_4BIT_DATA_PORT ,LCD_D5 ,DIO_PIN_OUTPUT);
 4e2:	41 e0       	ldi	r20, 0x01	; 1
 4e4:	65 e0       	ldi	r22, 0x05	; 5
 4e6:	80 e0       	ldi	r24, 0x00	; 0
 4e8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
      DIO_SetPinDir(LCD_4BIT_DATA_PORT ,LCD_D6 ,DIO_PIN_OUTPUT);
 4ec:	41 e0       	ldi	r20, 0x01	; 1
 4ee:	66 e0       	ldi	r22, 0x06	; 6
 4f0:	80 e0       	ldi	r24, 0x00	; 0
 4f2:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	  DIO_SetPinDir(LCD_4BIT_DATA_PORT ,LCD_D7 ,DIO_PIN_OUTPUT);
 4f6:	41 e0       	ldi	r20, 0x01	; 1
 4f8:	67 e0       	ldi	r22, 0x07	; 7
 4fa:	80 e0       	ldi	r24, 0x00	; 0
 4fc:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 500:	2f ef       	ldi	r18, 0xFF	; 255
 502:	81 ee       	ldi	r24, 0xE1	; 225
 504:	94 e0       	ldi	r25, 0x04	; 4
 506:	21 50       	subi	r18, 0x01	; 1
 508:	80 40       	sbci	r24, 0x00	; 0
 50a:	90 40       	sbci	r25, 0x00	; 0
 50c:	e1 f7       	brne	.-8      	; 0x506 <LCD_Init+0x4c>
 50e:	00 c0       	rjmp	.+0      	; 0x510 <LCD_Init+0x56>
 510:	00 00       	nop
	  
	  _delay_ms(100);
	  
	  LCD_WriteCommand(0x33);
 512:	83 e3       	ldi	r24, 0x33	; 51
 514:	0e 94 15 02 	call	0x42a	; 0x42a <LCD_WriteCommand>
	  LCD_WriteCommand(0x32);
 518:	82 e3       	ldi	r24, 0x32	; 50
 51a:	0e 94 15 02 	call	0x42a	; 0x42a <LCD_WriteCommand>
	  LCD_WriteCommand(0x28);
 51e:	88 e2       	ldi	r24, 0x28	; 40
 520:	0e 94 15 02 	call	0x42a	; 0x42a <LCD_WriteCommand>
	  LCD_WriteCommand(0x0C);
 524:	8c e0       	ldi	r24, 0x0C	; 12
 526:	0e 94 15 02 	call	0x42a	; 0x42a <LCD_WriteCommand>
      LCD_WriteCommand(0x01);
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	0e 94 15 02 	call	0x42a	; 0x42a <LCD_WriteCommand>
	  LCD_WriteCommand(0x06);
 530:	86 e0       	ldi	r24, 0x06	; 6
 532:	0e 94 15 02 	call	0x42a	; 0x42a <LCD_WriteCommand>
	  LCD_WriteCommand(0x02);
 536:	82 e0       	ldi	r24, 0x02	; 2
 538:	0e 94 15 02 	call	0x42a	; 0x42a <LCD_WriteCommand>
 53c:	08 95       	ret

0000053e <LCD_WriteChar>:
	
	_delay_ms(5);
}

void LCD_WriteChar(uint8 chr)
{
 53e:	cf 93       	push	r28
 540:	c8 2f       	mov	r28, r24
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_RS_PIN ,DIO_PIN_HIGH);
 542:	41 e0       	ldi	r20, 0x01	; 1
 544:	61 e0       	ldi	r22, 0x01	; 1
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_RW_PIN ,DIO_PIN_LOW);
 54c:	40 e0       	ldi	r20, 0x00	; 0
 54e:	62 e0       	ldi	r22, 0x02	; 2
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_E_PIN ,DIO_PIN_LOW);
 556:	40 e0       	ldi	r20, 0x00	; 0
 558:	63 e0       	ldi	r22, 0x03	; 3
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
	
	PORTA = (chr & 0xF0) | (PORTA & 0X0F);
 560:	8b b3       	in	r24, 0x1b	; 27
 562:	9c 2f       	mov	r25, r28
 564:	90 7f       	andi	r25, 0xF0	; 240
 566:	8f 70       	andi	r24, 0x0F	; 15
 568:	89 2b       	or	r24, r25
 56a:	8b bb       	out	0x1b, r24	; 27
	
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_E_PIN ,DIO_PIN_HIGH);
 56c:	41 e0       	ldi	r20, 0x01	; 1
 56e:	63 e0       	ldi	r22, 0x03	; 3
 570:	81 e0       	ldi	r24, 0x01	; 1
 572:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 576:	8f e9       	ldi	r24, 0x9F	; 159
 578:	9f e0       	ldi	r25, 0x0F	; 15
 57a:	01 97       	sbiw	r24, 0x01	; 1
 57c:	f1 f7       	brne	.-4      	; 0x57a <LCD_WriteChar+0x3c>
 57e:	00 c0       	rjmp	.+0      	; 0x580 <LCD_WriteChar+0x42>
 580:	00 00       	nop
	_delay_ms(1);
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_E_PIN ,DIO_PIN_LOW);
 582:	40 e0       	ldi	r20, 0x00	; 0
 584:	63 e0       	ldi	r22, 0x03	; 3
 586:	81 e0       	ldi	r24, 0x01	; 1
 588:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
		
	PORTA = (chr << 4) | (PORTA & 0X0F);
 58c:	2b b3       	in	r18, 0x1b	; 27
 58e:	30 e1       	ldi	r19, 0x10	; 16
 590:	c3 9f       	mul	r28, r19
 592:	c0 01       	movw	r24, r0
 594:	11 24       	eor	r1, r1
 596:	92 2f       	mov	r25, r18
 598:	9f 70       	andi	r25, 0x0F	; 15
 59a:	89 2b       	or	r24, r25
 59c:	8b bb       	out	0x1b, r24	; 27
		
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_E_PIN ,DIO_PIN_HIGH);
 59e:	41 e0       	ldi	r20, 0x01	; 1
 5a0:	63 e0       	ldi	r22, 0x03	; 3
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 5a8:	8f e9       	ldi	r24, 0x9F	; 159
 5aa:	9f e0       	ldi	r25, 0x0F	; 15
 5ac:	01 97       	sbiw	r24, 0x01	; 1
 5ae:	f1 f7       	brne	.-4      	; 0x5ac <LCD_WriteChar+0x6e>
 5b0:	00 c0       	rjmp	.+0      	; 0x5b2 <LCD_WriteChar+0x74>
 5b2:	00 00       	nop
	_delay_ms(1);
	DIO_SetPinVal(LCD_4BIT_CMD_PORT ,LCD_E_PIN ,DIO_PIN_LOW);
 5b4:	40 e0       	ldi	r20, 0x00	; 0
 5b6:	63 e0       	ldi	r22, 0x03	; 3
 5b8:	81 e0       	ldi	r24, 0x01	; 1
 5ba:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_SetPinVal>
 5be:	8f e1       	ldi	r24, 0x1F	; 31
 5c0:	9e e4       	ldi	r25, 0x4E	; 78
 5c2:	01 97       	sbiw	r24, 0x01	; 1
 5c4:	f1 f7       	brne	.-4      	; 0x5c2 <LCD_WriteChar+0x84>
 5c6:	00 c0       	rjmp	.+0      	; 0x5c8 <LCD_WriteChar+0x8a>
 5c8:	00 00       	nop
			
	_delay_ms(5);
}
 5ca:	cf 91       	pop	r28
 5cc:	08 95       	ret

000005ce <main>:

int main(void)
{
	uint8 val = 0;
	
    LCD_Init();
 5ce:	0e 94 5d 02 	call	0x4ba	; 0x4ba <LCD_Init>
	KeyPad_Init();
 5d2:	0e 94 85 01 	call	0x30a	; 0x30a <KeyPad_Init>
	
    while (1) 
    {
		val = KeyPad_GetValue() ;
 5d6:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <KeyPad_GetValue>
		
		if(val)
 5da:	88 23       	and	r24, r24
 5dc:	e1 f3       	breq	.-8      	; 0x5d6 <main+0x8>
		{
			LCD_WriteChar(val);
 5de:	0e 94 9f 02 	call	0x53e	; 0x53e <LCD_WriteChar>
 5e2:	f9 cf       	rjmp	.-14     	; 0x5d6 <main+0x8>

000005e4 <_exit>:
 5e4:	f8 94       	cli

000005e6 <__stop_program>:
 5e6:	ff cf       	rjmp	.-2      	; 0x5e6 <__stop_program>
